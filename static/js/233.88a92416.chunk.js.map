{"version":3,"file":"static/js/233.88a92416.chunk.js","mappings":"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","sources":["components/ContactForm/ContacForm.styled.js","components/ContactForm/ContactForm.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/Error/Error.styled.js","components/Error/Error.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\nbackground-color: transparent;\n  margin: auto;\n  padding: 20px;  \n  border-radius: 10px;\n  box-shadow:\n       inset 0 -3em 3em rgba(0,0,128,0.3),\n             0 0  0 2px rgb(255,255,255),\n             0.3em 0.3em 1em rgba(0,0,0,0.3);\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n`;\n\nexport const StyledLabel = styled.label`\nposition: relative;\ndisplay:grid;\ngap:10px;\ncolor:gainsboro;\n`;\n\nexport const StyledField = styled(Field)`\nborder-radius: 5px;\npadding: 5px 10px;\nwidth: 250px;\n\n&:hover{\n    border: 2px solid darkblue;\n}\n\n&:focus{\n    border: 2px solid darkblue;\n    outline: none;\n    color: darkblue;\n}\n`;\n\nexport const Button = styled.button`\nmargin-right: auto;\nborder-radius: 5px;\npadding: 4px  8px;\n\n&:hover{\n    background-color: darkblue;\n    color: white;\n}\n&:focus{\n    background-color: darkblue;\n    color: white;\n}\n`;\n\nexport const StyledError = styled(ErrorMessage)`\ncolor: red;\nposition: absolute;\ntop: 50%;\nright: 5%;\n`;\n\nexport const TitleContactForm = styled.h2`\ntext-transform: uppercase;\ncolor: white;\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\nimport { Button, StyledField, StyledForm, StyledLabel, StyledError , TitleContactForm} from './ContacForm.styled';\n\nconst SignupSchema = Yup.object().shape({\n   name: Yup.string()\n     .min(2, 'Too Short!')\n     .max(20, 'Too Long!')\n     .trim()\n     .required('Required'),\n   number: Yup.string()\n     .min(2, 'Too Short!')\n     .max(20, 'Too Long!')\n     .required('Required'),\n });\n\nconst ContactForm = () => {\n\n  const dispatch = useDispatch(); \n  \n  return (\n    <>\n    <TitleContactForm>Phonebook</TitleContactForm>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n            }}\n            validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {            \n            dispatch(addContact({...values}));\n            actions.resetForm();          \n          }}\n      >\n        \n      <StyledForm>\n        <StyledLabel>Name\n        <StyledField type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required />\n       <StyledError name=\"name\" component=\"div\"/>\n        </StyledLabel>\n\n        <StyledLabel>Phone\n        <StyledField\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required/>\n        <StyledError name=\"number\" component=\"div\"/>\n        </StyledLabel>\n                  \n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n      </Formik>\n    </>\n    )\n}\n\nexport default ContactForm\n\n\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n    \n        const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n        return visibleContacts;\n    });","import styled from 'styled-components';\nimport { GrClose } from \"react-icons/gr\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\npadding-left: 20px;\nlist-style: square;\ncolor: gainsboro;\n`;\n\nexport const WrapItem = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\ngap:20px;\n`;\n\nexport const Text = styled.p`\nmargin: 0;\npadding: 5px;\ntext-transform: capitalize;\ncolor: gainsboro;\n`;\n\nexport const DeleteBtn = styled.button`\npadding: 4px  8px;\ndisplay: flex; \nborder: none;\nborder-radius: 4px;\nbackground-color: transparent;\ncursor: pointer;\npadding: 2px;\n\n &:hover{\n  background-color: gainsboro;   \n}\n`; \n\nexport const WrappText = styled.div`\ndisplay: contents;\n\n:last-child{\n  margin-left: auto;\n}\n`;\n\nexport const IconClose = styled(GrClose)`\n path{\n  stroke: red; \n }  \n`;\n\nexport const TotalText = styled.p`\ncolor: lightsteelblue;\n`;\n\nexport const TitleList = styled.h2`\ncolor: gainsboro;\ntext-align: center;\n`; ","import styled from 'styled-components';\n\nexport const ErrorTitle = styled.h2`\ncolor:gainsboro;\ntext-align: center;\n`;","import { ErrorTitle } from \"./Error.styled\";\n\n const Error = () => {\n    return <ErrorTitle>Sorry, something went wrong, please reload the page.</ErrorTitle>\n};\n\nexport default Error;","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { selectError, selectVisibleContacts } from \"redux/contacts/selectors\";\nimport { DeleteBtn, List, WrapItem, Text, WrappText, IconClose, TitleList, TotalText } from \"./ContactList.styled\"\nimport Error from '../Error';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();  \n\n  const contacts = useSelector(selectVisibleContacts);  \n  const error = useSelector(selectError);\n  \n  return (\n    <>\n      {error ? <Error/> : null}\n      {(contacts.length !== 0 )\n      ? (<>\n          <TotalText>Total contacts: {contacts.length}</TotalText>\n    <List>\n      {contacts.map(({id, name, number}) => (        \n        <li key={id}>\n          <WrapItem>\n            <WrappText>\n            <Text>{name}</Text>\n            <Text> {number}</Text>\n           </WrappText>\n            <DeleteBtn onClick={() => dispatch(deleteContact(id))}>\n              <IconClose />\n            </DeleteBtn>\n          </WrapItem>\n        </li>\n      ))}\n    </List>\n      </>)\n        : (error ? null : <TitleList>Sorry, you have no saved contacts.</TitleList>)\n         }        \n    </>\n  )\n};\n\nexport default ContactList;","import ContactForm from \"components/ContactForm\";\nimport ContactList from \"components/ContactList\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div>\n            <h1>Your contacts</h1>\n            <ContactForm />\n            <ContactList/>\n     </div>\n    )\n};\n\nexport default Contacts;"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledLabel","_templateObject2","StyledField","Field","_templateObject3","Button","_templateObject4","StyledError","ErrorMessage","_templateObject5","TitleContactForm","_templateObject6","SignupSchema","Yup","shape","name","min","max","trim","required","number","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","addContact","_objectSpread","resetForm","type","pattern","title","component","selectError","state","contacts","error","selectVisibleContacts","createSelector","items","filter","contact","toLowerCase","includes","List","WrapItem","Text","DeleteBtn","WrappText","IconClose","GrClose","TotalText","_templateObject7","TitleList","_templateObject8","ErrorTitle","useSelector","Error","length","map","_ref","id","onClick","deleteContact","useEffect","fetchContacts","ContactForm","ContactList"],"sourceRoot":""}